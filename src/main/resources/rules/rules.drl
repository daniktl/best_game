package com.drools.best_game
//import com.drools.best_game.BestGame.Question
import com.drools.best_game.MainGUI
import com.drools.best_game.ResultFrame
import com.drools.best_game.QuestionFrame
//import function com.drools.best_game.BestGame.askQuestion

import javax.swing.JFrame
import javax.swing.JOptionPane
import java.awt.Rectangle
import com.google.gson.Gson
import java.io.InputStream
import com.google.gson.stream.JsonReader
import java.io.BufferedReader
import java.io.InputStreamReader
import com.drools.best_game.BestGame
import java.util.ArrayList


declare Question
    q: String
    shortcut: String
    possibleAnswers: String[]
    answer: String
end;

declare UserPreferences
    nerd: String
    spend_hours_preparing: String
    everyone_get_along: String
    like_spending_money: String
    wish_you_were_a_dick: String
    gamble: String
    like_boomer: String
    monthy_python: String
    over_50: String
    zombies: String
    more_than_2: String
    party: String
    monsters_vs_viruses: String
    mensa: String
    get_laid: String
    know_all: String
    cliche: String
    embarrass: String
    straight_as: String
    thug_vs_artist: String
    creative: String
    trains: String
    words_vs_trivia: String
    good_hands: String
    economics: String
    simple: String
    words_vs_tiles: String
    hard_choices: String
    farming: String
    card_deck: String
    two_games: String
    complexity: String
    strategy: String
    game_geeks: String
    defined_vs_nodt: String
end;

function void showResult(String result){
    ResultFrame rf = new ResultFrame(result);
    rf.show();
}

function void askQuestion(Question q){
    QuestionFrame qf = new QuestionFrame(q.getQ(), q.getPossibleAnswers(), q.getShortcut());
    qf.show();
}


//function void askQuestion(Question q){
//    JFrame frame = MainGUI.getFrame();
//    int answer_idx = JOptionPane.showOptionDialog(frame,
//            q.getQ(),
//            "Answer the question",
//            JOptionPane.DEFAULT_OPTION,
//            JOptionPane.QUESTION_MESSAGE,
//            null,
//            q.getPossibleAnswers(),
//            q.getPossibleAnswers()[0]
//    );
//    q.setAnswer(q.getPossibleAnswers()[answer_idx]);
//}


rule "init"
when

then
    Gson gson = new Gson();
    InputStream is = BestGame.class.getResourceAsStream("/q.json");
    JsonReader reader = new JsonReader(new BufferedReader(new InputStreamReader(is)));

    Question[] questions = gson.fromJson(reader, Question[].class);

    for (Question q: questions) {
        insert(q);
    }
    insert(new UserPreferences());
end

rule "first question"
no-loop
when
    $u : UserPreferences(nerd == null)
    $q : Question(getShortcut() == "nerd")
then
    askQuestion($q);
    update($u)
end

//rule "less then two hours"
//no-loop
//when
//    // check if already passed main frame
//    // MainFrame(started == true)
//    Question(getShortcut() == "2 hours", getAnswer() == "No")
//    $q : Question(getShortcut() == "nerd", getAnswer() == null)
//then
//    askQuestion($q);
//    update($q);
//end

rule "nerd"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == null)
//    Question(getShortcut() == "nerd", getAnswer() == "Yes")
    $q: Question(getShortcut() == "spend_hours_preparing")
then
    askQuestion($q);
    update($u)
end

rule "not nerd"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == null)
//    Question(getShortcut() == "nerd", getAnswer() == "No")
    $q: Question(getShortcut() == "everyone_get_along")
then
    askQuestion($q);
    update($u)
end

rule "spend hours preparing"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == "Yes")
then
    showResult("Warhammer");
end

rule "not spend hours preparing"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == "No", like_spending_money == null)
    $q: Question(getShortcut() == "like_spending_money")
then
    askQuestion($q);
    update($u);
end

rule "everyone get along"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == null)
    $q: Question(getShortcut() == "wish_you_were_a_dick")
then
    askQuestion($q);
    update($u);
end

rule "not everyone get along"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == null)
    $q: Question(getShortcut() == "gamble")
then
    askQuestion($q);
    update($u);
end

rule "like spending money"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == "No", like_spending_money == "Yes")
then
    showResult("Magic");
end

rule "not like spending money"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == "No", like_spending_money == "No", 
    	like_boomer == null)
    $q: Question(getShortcut() == "like_boomer")
then
    askQuestion($q);
    update($u);
end

rule "wish you were a dick"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "Yes")
then
    showResult("Arkham Horror");
end

rule "not wish you were a dick"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == null)
    $q: Question(getShortcut() == "monthy_python", getAnswer() == null)
then
    askQuestion($q);
    update($u);
end

rule "gamble"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "Yes")
then
    showResult("Rummoli");
end

rule "not gamble"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == null)
    $q: Question(getShortcut() == "over_50")
then
    askQuestion($q);
    update($u);
end

rule "like boomer"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == "No", like_spending_money == "No", 
    	like_boomer == "Yes")
then
    showResult("Battlestar Galactica");
end

rule "not like boomer"
no-loop
when
    $u : UserPreferences(nerd == "Yes", spend_hours_preparing == "No", like_spending_money == "No", 
    	like_boomer == "No")
then
    showResult("Cosmic Encounter");
end

rule "monthy python"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == "Yes")
then
    showResult("Shadows Over Camelot");
end

rule "not monthy python"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == "No", zombies == null)
    $q: Question(getShortcut() == "zombies")
then
    askQuestion($q);
    update($u);
end

rule "over 50"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == null)
    $q: Question(getShortcut() == "more_than_2")
then
    askQuestion($q);
    update($u);
end


rule "not over 50"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == null)
    $q: Question(getShortcut() == "party")
then
    askQuestion($q);
    update($u);
end

rule "zombies"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == "No", zombies == "Yes")
then
    showResult("Last Night on Earth");
end

rule "not zombies"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == "No", zombies == "No", monsters_vs_viruses == null)
    $q: Question(getShortcut() == "monsters_vs_viruses")
then
    askQuestion($q);
    update($u);
end

rule "more than 2"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == "Yes")
then
    showResult("Cribbage");
end

rule "not more than 2"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == "No", mensa == null)
    $q: Question(getShortcut() == "mensa")
then
    askQuestion($q);
    update($u);
end

rule "party"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == null)
    $q: Question(getShortcut() == "get_laid")
then
    askQuestion($q);
    update($u);
end


rule "not party"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == null)
    $q: Question(getShortcut() == "know_all")
then
    askQuestion($q);
    update($u);
end

rule "monsters vs viruses monster"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == "No", zombies == "No", monsters_vs_viruses == "Monster")
then
    showResult("Dungeon Run");
end

rule "monsters vs viruses virus"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "Yes", wish_you_were_a_dick == "No", 
    	monthy_python == "No", zombies == "No", monsters_vs_viruses == "Virus")
then
    showResult("Pandemic");
end

rule "mensa"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == "No", mensa == "Yes", cliche == null)
    $q: Question(getShortcut() == "cliche")
then
    askQuestion($q);
    update($u);
end

rule "not mensa"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == "No", mensa == "No")
then
    showResult("Backgammon");
end

rule "get laid"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "Yes")
then
    showResult("Twister");
end

rule "not get laid"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == null)
    $q: Question(getShortcut() == "embarrass")
then
    askQuestion($q);
    update($u);
end

rule "know all"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "Yes")
then
    showResult("Trivial Pursuit");
end

rule "not know all"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == null)
    $q: Question(getShortcut() == "straight_as")
then
    askQuestion($q);
    update($u);
end

rule "cliche"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == "No", mensa == "Yes", cliche == "Yes")
then
    showResult("Go");
end

rule "not cliche"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "Yes",
     more_than_2 == "No", mensa == "Yes", cliche == "No")
then
    showResult("Chess");
end

rule "embarrass"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "Yes", thug_vs_artist == null)
    $q: Question(getShortcut() == "thug_vs_artist")
then
    askQuestion($q);
    update($u);
end


rule "not embarrass"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == null)
    $q: Question(getShortcut() == "creative")
then
    askQuestion($q);
    update($u);
end

rule "straight A's"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "Yes")
then
    showResult("Scrabble");
end

rule "not straight A's"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == null)
    $q: Question(getShortcut() == "trains")
then
    askQuestion($q);
    update($u);
end

rule "thug vs artist thug"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "Yes", thug_vs_artist == "Thug")
then
    showResult("Ca$h'N'Gun$");
end

rule "thug vs artist artist"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "Yes", thug_vs_artist == "Artist")
then
    showResult("Cranium");
end

rule "creative"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == "Yes", words_vs_trivia == null)
    $q: Question(getShortcut() == "words_vs_trivia")
then
    askQuestion($q);
    update($u);
end


rule "not creative"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == "No", good_hands == null)
    $q: Question(getShortcut() == "good_hands")
then
    askQuestion($q);
    update($u);
end

rule "trains"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "Yes", economics == null)
    $q: Question(getShortcut() == "economics")
then
    askQuestion($q);
    update($u);
end


rule "not trains"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == null)
    $q: Question(getShortcut() == "simple")
then
    askQuestion($q);
    update($u);
end

rule "words vs trivia words"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == "Yes", words_vs_trivia == "Words")
then
    showResult("Beyond Balderdash");
end

rule "words vs trivia trivia"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == "Yes", words_vs_trivia == "Trivia")
then
    showResult("Wits and Wagers");
end

rule "good hands"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == "No", good_hands == "Yes")
then
    showResult("Jenga (DK Edition)");
end

rule "not good hands"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "Yes", get_laid == "No", embarrass == "No", creative == "No", good_hands == "No")
then
    showResult("Taboo");
end

rule "economics"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "Yes", economics == "Yes")
then
    showResult("Steam");
end

rule "not economics"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "Yes", economics == "No")
then
    showResult("Ticket to Ride");
end

rule "simple"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "Yes", 
     words_vs_tiles == null)
    $q: Question(getShortcut() == "words_vs_tiles")
then
    askQuestion($q);
    update($u);
end


rule "not simple"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == null)
    $q: Question(getShortcut() == "hard_choices")
then
    askQuestion($q);
    update($u);
end

rule "words vs tiles words"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "Yes", 
     words_vs_tiles == "Words")
then
    showResult("Scattergories");
end

rule "words vs tiles tiles"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "Yes", 
     words_vs_tiles == "Tiles")
then
    showResult("Qwirkle");
end

rule "hard choices"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == null)
    $q: Question(getShortcut() == "farming")
then
    askQuestion($q);
    update($u);
end


rule "not hard choices"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == null)
    $q: Question(getShortcut() == "card_deck")
then
    askQuestion($q);
    update($u);
end

rule "farming"
no-loop
when	
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == "Yes")
then
    showResult("Agricola");
end

rule "not farming"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == "No", two_games == null)
    $q: Question(getShortcut() == "two_games")
then
    askQuestion($q);
    update($u);
end

rule "card_deck"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "Yes", complexity == null)
    $q: Question(getShortcut() == "complexity")
then
    askQuestion($q);
    update($u);
end


rule "not card_deck"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "No", strategy == null)
    $q: Question(getShortcut() == "strategy")
then
    askQuestion($q);
    update($u);
end

rule "two games"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == "No", two_games == "Yes", game_geeks == null)
    $q: Question(getShortcut() == "game_geeks")
then
    askQuestion($q);
    update($u);
end

rule "not two games"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == "No", two_games == "No")
then
    showResult("Cities and Knights");
end

rule "less complexity"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "Yes", complexity == "Less")
then
    showResult("Dominion");
end

rule "more complexity"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "Yes", complexity == "More")
then
    showResult("7 Wonders");
end

rule "strategy"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "No", strategy == "Yes")
then
    showResult("Settlers of Catan");
end

rule "not strategy"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "No", strategy == "No", defined_vs_nodt == null)
    $q: Question(getShortcut() == "defined_vs_nodt")
then
    askQuestion($q);
    update($u);
end

rule "game_geeks"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == "No", two_games == "Yes", game_geeks == "Yes")
then
    showResult("Puerto Rico");
end

rule "not game_geeks"
no-loop
when
    $u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "Yes", farming == "No", two_games == "Yes", game_geeks == "No")
then
    showResult("Domaine");
end

rule "defined turns"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "No", strategy == "No", defined_vs_nodt == "Defined")
then
    showResult("Carcassonne");
end

rule "no down-time"
no-loop
when
	$u : UserPreferences(nerd == "No", everyone_get_along == "No", gamble == "No", over_50 == "No",
     party == "No", know_all == "No", straight_as == "No", trains == "No", simple == "No", 
     hard_choices == "No", card_deck == "No", strategy == "No", defined_vs_nodt == "No down-time")
then
    showResult("Pillars of the Earth");
end
